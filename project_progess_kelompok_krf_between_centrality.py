# -*- coding: utf-8 -*-
"""Project Progess_Kelompok KRF_Between Centrality.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13Vy-_LYPRp6R1C2Tuf20xUSHcvSQ731M

## Import Library
"""

import os
import csv
import json
import tweepy as  tw
import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt

"""## API Key and Authentikasi"""

consumer_key= '4jYQS823JkMpEfeR8Uxdmwmbj'
consumer_secret= 'deqhnK4iyYXJnyH7JS00BVtezL9DtWoY6l7DyPTPC7l458l0Al'
access_token= '1368541732539801600-e2qKx290ivr6gRS08FfpZdseK0v68R'
access_token_secret= 'KBKfVymxTfro49IG1jyXMXyF2yTsLffHjFJ8CNc6Jb9ZW'

auth = tw.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tw.API(auth, wait_on_rate_limit=True)

"""## Crawling Data Twitter"""

# Define the search term and the date_since date as variables
search_words = "vaksin"
#new_search = search_words + " -filter:retweets"
#new_search

# Collect tweets
tweets = tw.Cursor(api.search,
              q=search_words,
              lang="in").items(100)

#for tweet in tweets :
  #print(tweet.text)

users_locs = [[tweet.user.screen_name, tweet.in_reply_to_screen_name] for tweet in tweets]
tweet_text1 = pd.DataFrame(data=users_locs, 
                           columns=['Username', "User Mentions"])
tweet_text1 = tweet_text1.dropna()
tweet_text1.head(50)

"""## Visualisasi Graph"""

G_symmetric = nx.Graph()
G_symmetric.add_edge('Abimanyu_well','JogjaUpdate')
G_symmetric.add_edge('Abimanyu_well','125pantaiJogja')
G_symmetric.add_edge('Abimanyu_well','DIY')
G_symmetric.add_edge('Abimanyu_well','NU_Jogja')
G_symmetric.add_edge('Abimanyu_well','dishubdiy')
G_symmetric.add_edge('Abimanyu_well','ombudsmanjogja')
G_symmetric.add_edge('adjisdoaibu','yunsky20')
G_symmetric.add_edge('Abimanyu_well','humas_jogja')
G_symmetric.add_edge('beMySakura','beMySakura')
G_symmetric.add_edge('paraNEWnormal','kominfodiy')
G_symmetric.add_edge('Abimanyu_well','kominfodiy')
G_symmetric.add_edge('HalodocID','putciput')
G_symmetric.add_edge('LaPorko','Dean24924388')
G_symmetric.add_edge('thewindNcloud','eLFathir_')
G_symmetric.add_edge('Elina_Vay','BukanGatutKaca')
G_symmetric.add_edge('davidstmpl','ayupurwatie')
G_symmetric.add_edge('davidstmpl','gnsrrrr')
G_symmetric.add_edge('BagusJapah','Namaku_Mei')
G_symmetric.add_edge('AndryDevry','andyprima')
G_symmetric.add_edge('auliachery','dewisuprobo')

nx.draw_networkx(G_symmetric)

"""## Clustering Coefficient"""

nx.clustering(G_symmetric)

nx.average_clustering(G_symmetric)

"""## Degree"""

nx.degree(G_symmetric)

"""## Centrality measures memakai Degree Centrality"""

#nx.degree_centrality(G_symmetric)

"""## Centrality measures memakai Closeness Centrality"""

#nx.closeness_centrality(G_symmetric)

"""## Centrality measures memakai Between Centrality"""

nx.betweenness_centrality(G_symmetric)